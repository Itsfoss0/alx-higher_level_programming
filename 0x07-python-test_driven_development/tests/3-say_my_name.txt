===============================
3-say_my_name.py
===============================

Usage:
    The say_my_name function takes two arguments when called
        a) first_name (a string) -> The first name 
        b) last_name (a string)  -> The last name, if nothing is passed, an empty string is assumed
    and returns a string  "My name is <first_name> <last_name>"

Test cases: 
    >>> say_my_name = __import__('3-say_my_name').say_my_name

    >>> say_my_name("John", "Doe")
    'My name is John Doe'

    >>> say_my_name("Bruce", "Willies")
    'My name is Bruce Willies'

    >>> say_my_name(12, "Python")
    TypeError('first_name must be a string')

    >>> say_my_name("Santa", 23)
    TypeError('last_name must be a string')

    >>> say_my_name(["var", "Random"], "Claus")
    TypeError('first_name must be a string')

    >>> say_my_name(23.09, 234)
    TypeError('first_name must be a string')

    >>> say_my_name(23.09, "Sam Smith")
    TypeError('first_name must be a string')

    >>> say_my_name("Sam Smith", 23.98)
    TypeError('last_name must be a string')

    >>> say_my_name(None)
    TypeError('first_name must be a string')

    >>> say_my_name("Julien", "Barbier")
    'My name is Julien Barbier'

    >>> say_my_name("Fred", None)
    TypeError('last_name must be a string')

    >>> say_my_name(None, None)
    TypeError('first_name must be a string')

    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

    >>> say_my_name(name, "Doe")
    Traceback (most recent call last):
    ...
    NameError: name 'name' is not defined

    >>> say_my_name(str(30), str(32))
    'My name is 30 32'

    >>> say_my_name("", "Doup")
    'My name is  Doup'